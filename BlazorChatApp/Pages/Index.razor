@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<div class="form-group">
    <label>
        Username:
        <input type="text" class="form-control" placeholder="Enter your username" @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input class="form-control" placeholder="Type message" @bind="messageInput" size="50"  @onkeyup="PressEnter" />
    </label>
    <button class="btn btn-outline-primary" @onclick="Send" disabled="@(!IsConnected)">Send</button>
</div>
<hr>

@foreach (var message in messages)
{
    string[] usernameAndMessage = message.Split(":");
    <div class="mb-1">
        <i class="@(usernameAndMessage[0] == userInput ? "oi oi-person text-primary" : "oi oi-person text-success")" />
        <strong>@usernameAndMessage[0]:</strong>
        <span>@usernameAndMessage[1]</span>
    </div>
}


@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private async Task PressEnter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumPadEnter")
        {
            await Send();
        }
    }

    private async Task Send() =>
        await hubConnection.SendAsync("SendMessage", userInput, messageInput);

    public bool IsConnected =>
    hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}